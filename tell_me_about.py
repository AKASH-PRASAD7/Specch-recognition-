# -*- coding: utf-8 -*-
"""Tell Me About.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Yzuek9Bvex0P2sLCFIpDFQRJLY_7eH-L

##Getting the text

Search query: https://www.google.com/search?q=coffee+as+a+fat+burner
"""

##!pip install beautifulsoup4
import sys
input =sys.argv[1]
print(input)

query = input

split_q = query.split(' ')

print(split_q)

index_about = split_q.index('about')

query = ' '

for i in range(index_about+1, len(split_q)):
  query += split_q[i]+'+'

query = query[:-1].replace(' ', '')

query

import requests

url = f'https://www.google.com/search?q={query}'
r = requests.get(url)
html_doc = r.text

from bs4 import BeautifulSoup
soup = BeautifulSoup(html_doc, 'html.parser')

for link in soup.find_all('a', href=True):
  print(link)

links = []

for link in soup.find_all('a', href=True):
  if "/url?q=" in str(link['href']):
    if str(link['href'])[0] == '/':
      links.append(link['href'][7:])
    else:
      links.append(link['href'])

links

import urllib.request
import urllib.request as r

contents = []

for i in range(len(links)):
  first_link = links[i]

  try:
    page = r.urlopen(str(first_link))

    html2 = page.read().decode('utf8')

    soup2 = BeautifulSoup(html2, 'html.parser')

    result = soup2.find_all('p')

    content = ''

    for p in result:
      content += p.text

    contents.append(content)
  except:
    pass

print(contents)

"""##Preprocessing text"""

contents = [content.lower() for content in contents]

print(len(contents))

contents = set(contents)

print(len(contents))

contents

# """##Summary"""

#!pip install sumy
import sumy

from sumy.summarizers.text_rank import TextRankSummarizer

import nltk
nltk.download('punkt')

from sumy.nlp.tokenizers import Tokenizer
from sumy.parsers.plaintext import PlaintextParser 


parser=PlaintextParser.from_string(contents,Tokenizer('english'))

summarizer = TextRankSummarizer()

# Ranking sentences on the basis of TextRank algorithm and choosing top 2 sentences for summary
summary_sentences = summarizer(parser.document,2)

# Printing the summary
summary = ""

for sentence in summary_sentences:
    summary = summary + str(sentence)

print(summary)

#!pip install gTTS

from gtts import gTTS
  
# This module is imported so that we can 
# play the converted audio
import os
  
# The text that you want to convert to audio
mytext = 'Welcome to geeksforgeeks!'
  
# Language in which you want to convert
language = 'en'
  
# Passing the text and language to the engine, 
# here we have marked slow=False. Which tells 
# the module that the converted audio should 
# have a high speed
myobj = gTTS(text=summary, lang=language, slow=False)
  
# Saving the converted audio in a mp3 file named
# welcome 
myobj.save("test.mp3")





